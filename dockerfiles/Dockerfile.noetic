# using stock Ubuntu 20.04
FROM ubuntu:20.04

# using NVIDIA CUDA GL NGC
# FROM nvidia/cudagl:11.4.0-devel-ubuntu20.04

# no prompts from apt-get
ARG DEBIAN_FRONTEND=noninteractive

# use bash as primary shell for RUN commands
SHELL [ "/bin/bash", "-c" ]

# for slow installations (UTA WiFi is wonky...)
# RUN apt-get update && apt-get -y --no-install-recommends install python3 python3-pip && \
#     python3 -m pip install --upgrade pip setuptools wheel testresources && \
#     python3 -m pip install apt-mirror-updater && \
#     apt-mirror-updater -a

# installing initial setup packages
RUN apt-get update && apt-get -y --no-install-recommends install \
    git \
    curl \
    wget \
    apt-utils \
    software-properties-common \
    build-essential \
    cmake \
    lsb-release \
    python3-pip \
    python3-dev \
    gpg-agent \
    gnupg \
    libxext6 \
    libx11-6 \
    libglvnd0 \
    libgl1 \
    libglx0 \
    libegl1 \
    freeglut3-dev \
    net-tools \
    && apt-get -y autoremove \
    && apt-get clean

# installing ROS Noetic and build tools
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' && \
    curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - && \
    apt-get update && apt-get -y --no-install-recommends install \
    ros-noetic-desktop-full \
    python3-rosdep \
    python3-rosinstall \
    python3-rosinstall-generator \
    python3-wstool \
    python3-catkin-tools \
    && apt-get -y autoremove \
    && apt-get clean

# installing ROS Packages
RUN apt-get update && apt-get -y --no-install-recommends install \
    ros-noetic-ros-control \
    ros-noetic-ros-controllers \
    ros-noetic-gazebo-ros-pkgs \
    ros-noetic-gazebo-ros-control \
    ros-noetic-moveit \
    ros-noetic-moveit-resources-prbt-moveit-config \
    ros-noetic-pilz-industrial-motion \
    && apt-get -y autoremove \
    && apt-get clean

# install Ignition Citadel & Gazebo 11
RUN sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list' && \
    wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add - && \
    apt-get update && apt-get -y install --no-install-recommends ignition-citadel ros-noetic-ros-ign gazebo11 libgazebo11-dev \
    && apt-get -y autoremove \
    && apt-get clean

# define catkin workspace
ENV HOME /root
ENV CATKIN_WS /root/catkin_ws
ENV CATKIN_SRC /root/catkin_ws/src

# setup catkin workspace
RUN rosdep init && \
    rosdep update && \
    source /opt/ros/noetic/setup.bash && \
    mkdir -p ${CATKIN_SRC} && \
    cd ${CATKIN_WS} && \
    catkin init && \
    rosdep install --from-paths ./src --ignore-packages-from-source -y && \
    catkin build --cmake-args -DCMAKE_BUILD_TYPE=Release

# cleaning apt
RUN apt-get -y autoremove && apt-get -y autoclean

# nvidia-container-runtime for nvidia-docker hosts
ENV NVIDIA_VISIBLE_DEVICES \
    ${NVIDIA_VISIBLE_DEVICES:-all}
ENV NVIDIA_DRIVER_CAPABILITIES \
    ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics
ENV QT_X11_NO_MITSHM 1
ENV TERM xterm-256color

# fixes https://github.com/ignitionrobotics/ign-gazebo/issues/38
ENV IGN_IP=127.0.0.1