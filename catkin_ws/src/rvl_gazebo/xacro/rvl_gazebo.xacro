<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="rvl_ur_gazebo">

    <xacro:include filename="$(find rvl_robot_description)/xacro/custom/rvl_ur.xacro" />

    <!-- Configure self collision properties per link -->
    <gazebo reference="shoulder_link">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="upper_arm_link">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="forearm_link">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="wrist_1_link">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="wrist_3_link">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="wrist_2_link">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="ee_link">
        <selfCollide>true</selfCollide>
    </gazebo>

    <!-- Load joint names from configuration YAML -->
    <xacro:property name="joint_parameters_file" value="$(find rvl_robot_description)/config/robotiq/2f_85/joint_parameters.yaml" />
    <xacro:property name="config_joint_parameters" value="${xacro.load_yaml(joint_parameters_file)}" />
    <xacro:property name="sec_joint_names" value="${config_joint_parameters['joint_names']}" />
    <xacro:property name="knuckle_joint_name" value="${sec_joint_names['base_to_knuckle']}" />
    <xacro:property name="bar_joint_name" value="${sec_joint_names['knuckle_to_bar']}" />
    <xacro:property name="proximal_phalanx_joint_name" value="${sec_joint_names['base_to_proximal']}" />
    <xacro:property name="distal_phalanx_joint_name" value="${sec_joint_names['bar_to_distal']}" />
    <xacro:property name="finger_tip_joint_name" value="${sec_joint_names['distal_to_tip']}" />

    <gazebo>
        <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="mimic_robotiq_1">
            <joint>${knuckle_joint_name}</joint>
            <mimicJoint>left_${proximal_phalanx_joint_name}</mimicJoint>
            <multiplier>1.0</multiplier>
        </plugin>
        <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="mimic_robotiq_2">
            <joint>${knuckle_joint_name}</joint>
            <mimicJoint>left_${distal_phalanx_joint_name}</mimicJoint>
            <multiplier>-1.0</multiplier>
        </plugin>
        <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="mimic_robotiq_3">
            <joint>${knuckle_joint_name}</joint>
            <mimicJoint>right_${proximal_phalanx_joint_name}</mimicJoint>
            <multiplier>1.0</multiplier>
        </plugin>
        <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="mimic_robotiq_4">
            <joint>${knuckle_joint_name}</joint>
            <mimicJoint>right_${distal_phalanx_joint_name}</mimicJoint>
            <multiplier>-1.0</multiplier>
        </plugin>
        <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="mimic_robotiq_5">
            <joint>${knuckle_joint_name}</joint>
            <mimicJoint>right_${knuckle_joint_name}</mimicJoint>
            <multiplier>1.0</multiplier>
        </plugin>
    </gazebo>

    <xacro:property name="sec_link_names" value="${config_joint_parameters['link_names']}" />
    <xacro:property name="palm_link_name" value="${sec_link_names['palm']}" />
    <xacro:property name="knuckle_link_name" value="${sec_link_names['knuckle']}" />
    <xacro:property name="bar_link_name" value="${sec_link_names['bar']}" />
    <xacro:property name="proximal_phalanx_link_name" value="${sec_link_names['proximal_phalanx']}" />
    <xacro:property name="distal_phalanx_link_name" value="${sec_link_names['distal_phalanx']}" />
    <xacro:property name="finger_tip_link_name" value="${sec_link_names['finger_tip']}" />

    <gazebo reference="${palm_link_name}">
        <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="left_${knuckle_link_name}">
        <material>Gazebo/Grey</material>
    </gazebo>
    <gazebo reference="left_${bar_link_name}">
        <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="left_${proximal_phalanx_link_name}">
        <material>Gazebo/Grey</material>
    </gazebo>
    <gazebo reference="left_${distal_phalanx_link_name}">
        <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="right_${knuckle_link_name}">
        <material>Gazebo/Grey</material>
    </gazebo>
    <gazebo reference="right_${bar_link_name}">
        <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="right_${proximal_phalanx_link_name}">
        <material>Gazebo/Grey</material>
    </gazebo>
    <gazebo reference="right_${distal_phalanx_link_name}">
        <material>Gazebo/Black</material>
    </gazebo>

    <xacro:include filename="$(find rvl_gazebo)/xacro/macros/rs_l515_addon.xacro" />
    <xacro:rs_l515_gazebo_addon camera_name="L515" publish_pointcloud="true"/>

    <!--
        Attach the Gazebo model to Gazebo's world frame.
        Note: if you're looking to integrate a UR into a larger scene and need
        to add EEFs or other parts, DO NOT change this file or the 'world' link
        here. Create a NEW xacro instead and decide whether you need to add
        a 'world' link there.
    -->
    <link name="world" />
    <joint name="world_joint" type="fixed">
        <parent link="world" />
        <child link="base_link" />
        <origin xyz="0 0 0" rpy="0 0 0" />
    </joint>

    <!--
        Inject Gazebo ROS Control plugin, which allows us to use ros_control
        controllers to control the virtual robot hw.
    -->
    <gazebo>
        <plugin name="ros_control" filename="libgazebo_ros_control.so">
            <!--robotNamespace>/</robotNamespace-->
            <!--robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType-->
        </plugin>
    </gazebo>
</robot>