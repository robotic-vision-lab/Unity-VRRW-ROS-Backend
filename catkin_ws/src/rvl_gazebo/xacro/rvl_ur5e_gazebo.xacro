<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="rvl_ur5e_gazebo">

    <xacro:include filename="$(find rvl_robot_description)/xacro/rvl_ur5e.xacro" />

    <!-- Connect base_link to gazebo ground -->
    <link name="world" />
    <joint name="fixed_base_to_world" type="fixed">
        <parent link="world" />
        <child link="base_link" />
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
    </joint>

    <!-- Configure self collision properties per link -->
    <gazebo reference="shoulder_link">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="upper_arm_link">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="forearm_link">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="wrist_1_link">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="wrist_3_link">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="wrist_2_link">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="ee_link">
        <selfCollide>true</selfCollide>
    </gazebo>

    <!-- Load joint names from config -->
    <!-- TODO: Load it dynamically somehow -->
    <xacro:property name="stroke" value="85" />
    <xacro:include filename="$(find rvl_robot_description)/xacro/robotiq/include/robotiq_2f_common.xacro" />
    <xacro:load_robotiq_config joint_parameters_file="$(find rvl_robot_description)/config/robotiq/2f_${stroke}/joint_parameters.yaml" physical_parameters_file="$(find rvl_robot_description)/config/robotiq/2f_${stroke}/physical_parameters.yaml" visual_parameters_file="$(find rvl_robot_description)/config/robotiq/2f_${stroke}/visual_parameters.yaml" />

    <!--
        Inject Gazebo ROS Control plugin, which allows us to use ros_control
        controllers to control the virtual robot hw.
    -->
    <gazebo>

        <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="mimic_robotiq_85_1">
            <joint>${knuckle_joint_name}</joint>
            <mimicJoint>left${proximal_phalanx_joint_name}</mimicJoint>
            <multiplier>1.0</multiplier>
        </plugin>
        <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="mimic_robotiq_85_2">
            <joint>${knuckle_joint_name}</joint>
            <mimicJoint>left${distal_phalanx_joint_name}</mimicJoint>
            <multiplier>-1.0</multiplier>
        </plugin>
        <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="mimic_robotiq_85_3">
            <joint>${knuckle_joint_name}</joint>
            <mimicJoint>right${proximal_phalanx_joint_name}</mimicJoint>
            <multiplier>1.0</multiplier>
        </plugin>
        <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="mimic_robotiq_85_4">
            <joint>${knuckle_joint_name}</joint>
            <mimicJoint>right${distal_phalanx_joint_name}</mimicJoint>
            <multiplier>-1.0</multiplier>
        </plugin>
        <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="mimic_robotiq_85_5">
            <joint>${knuckle_joint_name}</joint>
            <mimicJoint>right${knuckle_joint_name}</mimicJoint>
            <multiplier>1.0</multiplier>
        </plugin>

        <plugin name="ros_control" filename="libgazebo_ros_control.so">
            <!--robotNamespace>/</robotNamespace-->
            <!--robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType-->
        </plugin>
    </gazebo>

</robot>