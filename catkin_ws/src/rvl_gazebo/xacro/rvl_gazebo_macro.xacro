<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:macro name="rvl_arm_gazebo" params="
        prefix
        ur_variant
        ur_transmission_hw_interface:=hardware_interface/PositionJointInterface
        robotiq_variant
        robotiq_transmission_hw_interface:=hardware_interface/EffortJointInterface
        safety_limits:=false
        safety_pos_margin:=0.15
        safety_k_position:=20">

        <xacro:include filename="$(find rvl_robot_description)/xacro/custom/rvl_ur_robotiq_macro.xacro" />

        <xacro:arg name="prefix" default="" />
        <xacro:arg name="ur_variant" default="ur5e" />
        <xacro:arg name="ur_transmission_hw_interface" default="hardware_interface/PositionJointInterface" />
        <xacro:arg name="robotiq_variant" default="2f_85" />
        <xacro:arg name="robotiq_transmission_hw_interface" default="hardware_interface/EffortJointInterface" />
        <xacro:arg name="safety_limits" default="false" />
        <xacro:arg name="safety_pos_margin" default="0.15" />
        <xacro:arg name="safety_k_position" default="20" />

        <xacro:rvl_arm
            prefix="${prefix}"
            ur_variant="${ur_variant}"
            ur_transmission_hw_interface="${ur_transmission_hw_interface}"
            robotiq_variant="${robotiq_variant}"
            robotiq_transmission_hw_interface="${robotiq_transmission_hw_interface}"
            safety_limits="${safety_limits}"
            safety_pos_margin="${safety_pos_margin}"
            safety_k_position="${safety_k_position}" />

        <!-- Configure self collision properties per link -->
        <gazebo reference="${prefix}shoulder_link">
            <selfCollide>true</selfCollide>
        </gazebo>
        <gazebo reference="${prefix}upper_arm_link">
            <selfCollide>true</selfCollide>
        </gazebo>
        <gazebo reference="${prefix}forearm_link">
            <selfCollide>true</selfCollide>
        </gazebo>
        <gazebo reference="${prefix}wrist_1_link">
            <selfCollide>true</selfCollide>
        </gazebo>
        <gazebo reference="${prefix}wrist_3_link">
            <selfCollide>true</selfCollide>
        </gazebo>
        <gazebo reference="${prefix}wrist_2_link">
            <selfCollide>true</selfCollide>
        </gazebo>
        <gazebo reference="${prefix}ee_link">
            <selfCollide>true</selfCollide>
        </gazebo>

        <!-- Configure mimic joint plugin for Robotiq 2F Grippers (3F don't need it?)-->
        <xacro:if value="${robotiq_variant.startswith('2f')}">
            <!-- Load link names from configuration YAML -->
            <xacro:property name="joint_parameters_file" value="$(find rvl_robot_description)/config/robotiq/${robotiq_variant}/joint_parameters.yaml" />
            <xacro:property name="config_joint_parameters" value="${xacro.load_yaml(joint_parameters_file)}" />
            <xacro:property name="sec_joint_names" value="${config_joint_parameters['joint_names']}" />
            <xacro:property name="knuckle_joint_name" value="${sec_joint_names['base_to_knuckle']}" scope="parent" />
            <xacro:property name="bar_joint_name" value="${sec_joint_names['knuckle_to_bar']}" scope="parent" />
            <xacro:property name="proximal_phalanx_joint_name" value="${sec_joint_names['base_to_proximal']}" scope="parent" />
            <xacro:property name="distal_phalanx_joint_name" value="${sec_joint_names['bar_to_distal']}" scope="parent" />
            <xacro:property name="finger_tip_joint_name" value="${sec_joint_names['distal_to_tip']}" scope="parent" />

            <!-- Python slice the robotiq stroke (85mm or 140mm) -->
            <xacro:property name="stroke" value="${robotiq_variant[3:]}" />

            <!-- joint mimic configuration -->
            <gazebo>
                <xacro:if value="${stroke == 85}">
                    <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="${prefix}mimic_robotiq_${stroke}_1">
                        <joint>${prefix}${knuckle_joint_name}</joint>
                        <mimicJoint>${prefix}left_${proximal_phalanx_joint_name}</mimicJoint>
                        <multiplier>1.0</multiplier>
                    </plugin>
                    <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="${prefix}mimic_robotiq_${stroke}_2">
                        <joint>${knuckle_joint_name}</joint>
                        <mimicJoint>${prefix}left_${distal_phalanx_joint_name}</mimicJoint>
                        <multiplier>-1.0</multiplier>
                    </plugin>
                    <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="${prefix}mimic_robotiq_${stroke}_3">
                        <joint>${prefix}${knuckle_joint_name}</joint>
                        <mimicJoint>${prefix}right_${proximal_phalanx_joint_name}</mimicJoint>
                        <multiplier>1.0</multiplier>
                    </plugin>
                    <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="${prefix}mimic_robotiq_${stroke}_4">
                        <joint>${prefix}${knuckle_joint_name}</joint>
                        <mimicJoint>${prefix}right_${distal_phalanx_joint_name}</mimicJoint>
                        <multiplier>-1.0</multiplier>
                    </plugin>
                    <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="${prefix}mimic_robotiq_${stroke}_5">
                        <joint>${prefix}${knuckle_joint_name}</joint>
                        <mimicJoint>${prefix}right_${knuckle_joint_name}</mimicJoint>
                        <multiplier>1.0</multiplier>
                    </plugin>
                </xacro:if>

                <xacro:if value="${stroke == 140}">
                    <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="${prefix}mimic_robotiq_${stroke}_1">
                        <joint>${prefix}${knuckle_joint_name}</joint>
                        <mimicJoint>${prefix}left_${proximal_phalanx_joint_name}</mimicJoint>
                        <multiplier>-1.0</multiplier>
                    </plugin>
                    <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="${prefix}mimic_robotiq_${stroke}_2">
                        <joint>${knuckle_joint_name}</joint>
                        <mimicJoint>${prefix}left_${distal_phalanx_joint_name}</mimicJoint>
                        <multiplier>1.0</multiplier>
                    </plugin>
                    <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="${prefix}mimic_robotiq_${stroke}_3">
                        <joint>${prefix}${knuckle_joint_name}</joint>
                        <mimicJoint>${prefix}right_${proximal_phalanx_joint_name}</mimicJoint>
                        <multiplier>-1.0</multiplier>
                    </plugin>
                    <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="${prefix}mimic_robotiq_${stroke}_4">
                        <joint>${prefix}${knuckle_joint_name}</joint>
                        <mimicJoint>${prefix}right_${distal_phalanx_joint_name}</mimicJoint>
                        <multiplier>1.0</multiplier>
                    </plugin>
                    <plugin filename="libroboticsgroup_upatras_gazebo_mimic_joint_plugin.so" name="${prefix}mimic_robotiq_${stroke}_5">
                        <joint>${prefix}${knuckle_joint_name}</joint>
                        <mimicJoint>${prefix}right_${knuckle_joint_name}</mimicJoint>
                        <multiplier>-1.0</multiplier>
                    </plugin>
                </xacro:if>
            </gazebo>

            <!-- Links colors  -->
            <xacro:property name="sec_link_names" value="${config_joint_parameters['link_names']}" />
            <xacro:property name="palm_link_name" value="${sec_link_names['palm']}" scope="parent" />
            <xacro:property name="knuckle_link_name" value="${sec_link_names['knuckle']}" scope="parent" />
            <xacro:property name="bar_link_name" value="${sec_link_names['bar']}" scope="parent" />
            <xacro:property name="proximal_phalanx_link_name" value="${sec_link_names['proximal_phalanx']}" scope="parent" />
            <xacro:property name="distal_phalanx_link_name" value="${sec_link_names['distal_phalanx']}" scope="parent" />
            <xacro:property name="finger_tip_link_name" value="${sec_link_names['finger_tip']}" scope="parent" />

            <gazebo reference="${prefix}${palm_link_name}">
                <material>Gazebo/Black</material>
            </gazebo>
            <gazebo reference="${prefix}left_${knuckle_link_name}">
                <material>Gazebo/Grey</material>
            </gazebo>
            <gazebo reference="${prefix}left_${bar_link_name}">
                <material>Gazebo/Black</material>
            </gazebo>
            <gazebo reference="${prefix}left_${proximal_phalanx_link_name}">
                <material>Gazebo/Grey</material>
            </gazebo>
            <gazebo reference="${prefix}left_${distal_phalanx_link_name}">
                <material>Gazebo/Black</material>
            </gazebo>
            <gazebo reference="${prefix}right_${knuckle_link_name}">
                <material>Gazebo/Grey</material>
            </gazebo>
            <gazebo reference="${prefix}right_${bar_link_name}">
                <material>Gazebo/Black</material>
            </gazebo>
            <gazebo reference="${prefix}right_${proximal_phalanx_link_name}">
                <material>Gazebo/Grey</material>
            </gazebo>
            <gazebo reference="${prefix}right_${distal_phalanx_link_name}">
                <material>Gazebo/Black</material>
            </gazebo>
        </xacro:if>

        <!--
            Inject Gazebo ROS Control plugin, which allows us to use ros_control
            controllers to control the virtual robot hw.
        -->
        <gazebo>
            <plugin name="ros_control" filename="libgazebo_ros_control.so">
                <!--robotNamespace>/</robotNamespace-->
                <!--robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType-->
            </plugin>
        </gazebo>

    </xacro:macro>

</robot>