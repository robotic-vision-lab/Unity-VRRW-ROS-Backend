<?xml version="1.0"?>
<launch>
    <!-- robot description -->
    <param name="robot_description" command="$(find xacro)/xacro '$(find rvl_gazebo)/xacro/rvl_ur5e_gazebo.xacro'" />

    <!-- Robot state publisher -->
    <arg name="tf_prefix" default="" doc="tf_prefix used for the robot." />
    <arg name="tf_pub_rate" default="500" doc="Rate at which robot_state_publisher should publish transforms." />
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="$(arg tf_pub_rate)" />
        <param name="tf_prefix" value="$(arg tf_prefix)" />
    </node>

    <!-- Controller configuration -->
    <arg name="controller_config_file" default="$(find rvl_gazebo)/config/controllers.yaml" doc="Config file used for defining the ROS-Control controllers." />
    <arg name="controllers" default="joint_state_controller pos_joint_traj_controller gripper_controller" doc="Controllers that are activated by default." />
    <arg name="stopped_controllers" default="joint_group_pos_controller" doc="Controllers that are initally loaded, but not started." />
    <rosparam file="$(arg controller_config_file)" command="load" />

    <!-- Gazebo parameters -->
    <arg name="gazebo_model_name" default="robot" doc="The name to give to the model in Gazebo (after spawning it)." />
    <arg name="gazebo_world" default="worlds/empty.world" doc="The '.world' file to load in Gazebo." />
    <arg name="gui" default="true" doc="If true, Gazebo UI is started. If false, only start Gazebo server." />
    <arg name="paused" default="false" doc="If true, start Gazebo in paused mode. If false, start simulation as soon as Gazebo has loaded." />
    <arg name="robot_description_param_name" default="robot_description" doc="Name of the parameter which contains the robot description (ie: URDF) which should be spawned into Gazebo." />
    <arg name="spawn_z" default="1" doc="At which height the model should be spawned. NOTE: lower values will cause the robot to collide with the ground plane." />
    <arg name="start_gazebo" default="true" doc="If true, Gazebo will be started. If false, Gazebo will be assumed to have been started elsewhere." />

    <!-- Start Gazebo and load the empty world if requested to do so -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch" if="$(arg start_gazebo)">
        <arg name="world_name" value="$(arg gazebo_world)" />
        <arg name="paused" value="$(arg paused)" />
        <arg name="gui" value="$(arg gui)" />
    </include>

    <!-- Spawn the model loaded earlier in the simulation just started -->
    <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="
      -urdf
      -param $(arg robot_description_param_name)
      -model $(arg gazebo_model_name)
      -z $(arg spawn_z)" output="screen" respawn="false" />

    <!-- Load and start the controllers listed in the 'controllers' arg. -->
    <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner" args="$(arg controllers)" output="screen" respawn="false" />
</launch>